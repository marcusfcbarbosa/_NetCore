1- Iniciando Projeto
dotnet new webapi -n ProAgil.WebApi
=========================================================
2-criando dominio
dotnet new classlib -n ProAgil.Domain
=========================================================
3- criando a infra
dotnet new classlib -n ProAgil.Infra
=========================================================
4-Criando shared
dotnet new classlib -n ProAgil.Shared
=========================================================
5- Criando a camada de teste
dotnet new mstest -n ProAgil.Test
=========================================================
6- Criando a Solution
dotnet new sln
=========================================================
7- Adicionando a referencia dos projetos
dotnet sln add (caminho de todos os .csprojs)
=========================================================
8- Adicionando Flunt
dotnet add package FluentValidator --version 2.0.4
=========================================================
9- Adicionando Microsoft.EntityFrameworkCore
dotnet add package Microsoft.EntityFrameworkCore --version 2.2.4
=========================================================
10- instalando SqLite
dotnet add package Microsoft.EntityFrameworkCore.Sqlite --version 2.2.4
=========================================================
11- Instalando Swagger na Api
dotnet add package Swashbuckle.AspNetCore
=========================================================
12-Criando as migrations e apontando como startup o projeto cujo target é .NetCore

dotnet add package Microsoft.EntityFrameworkCore.Sqlite --version 2.2.0
Lemnbrando que o EF Core para criar as migrations necessita de um projeto cujo target seja .NetCore ao invés de um .NetStandard
agora do projeto infra, referenciando o startup project externo cujo target é o .NetCore 
Criando as migrations
dotnet ef --startup-project ..\..\1_api\ProAgil.webapi\ migrations add init
Criando a base de dados
dotnet ef --startup-project ..\..\1_api\ProAgil.webapi\ database update
Remover a migrations
dotnet ef --startup-project ..\..\1_api\ProAgil.webapi\ migrations remove
Alterando campos
dotnet ef --startup-project ..\..\1_api\ProAgil.webapi\ migrations add "nome da migration"


12.1- ligar o app do angular
npm install -g @angular/cli

https://cli.angular.io/

ng new ProAgil-App

12.2-
        -rodar a aplicação angular 
        ng serve
        

        -- para gerar node_modules e baixr as dependencias:
        /ProAgil-App npm install
============================================================================
-Extensões importantes angular VS Code

angular files
angular Language service
angular2-switcher (snippets e testes)
Auto Rename Tag (tags html )
Bracket Pair Colorizer
C# Extensions
Debbuger for Chrome
Live Server (para trabalhar com arquivos html)
Material Icon Theme
npm
nuget package manager
Path Intellisense (Facilita encontrar rotas de arquivos .json)
Prettier Code Formatter
TSLint (padrões nas formas de codificação)
Visual Studio KeyMap
========================================================================
13- Request Http no angular (requisições Http)

app.modules.ts

import { HttpClientModule } from '@angular/common/http';

imports: [
     HttpClientModule
  ],

e dentro do construct do typescript do componente, se injeta a dependencia
eventos.component.ts

import { HttpClient } from '@angular/common/http';

  constructor(private http: HttpClient) { }
  ngOnInit() { 
    this.getEventos();
   }

  getEventos() {
    this.eventos = this.http.get('http://localhost:5000/api/eventos').subscribe(
        response =>{ 
          this.eventos = response;
         }, error =>{
           console.log(error);
         }
    );
  }
========================================================================  
  Rota Base: http://localhost:5000/api

  Rota Base: http://localhost:5000/api/evento
========================================================================
14- Template bootstrap fontawesome gratuito

0_App/ProAgil-App/npm install bootstrap
0_App/ProAgil-App/npm install --save @fortawesome/fontawesome-free

Por padrão o arquivo na raiz da aplicação angular angular.json
 "styles": [
   "src/styles.css"
 ],

 Dessa forma dentro do arquivo em questão, 
 styles.css

@import '../node_modules/bootstrap/dist/css/bootstrap.min.css';
@import '../node_modules/@fortawesome/fontawesome-free/css/all.min.css';
========================================================================
15- trabalhando com two-way data Binding

 15.1- nEcessita de um import para funcionar no app.module.ts
 import { FormsModule } from '@angular/forms';
 imports: [
      BrowserModule,
      AppRoutingModule,
      HttpClientModule,
      FormsModule ---Este aqui
   ],
---------------------------------------------
   Na View, ele a principio nao funciona dentro de uma tag <form> somente dentro de uma <div>
   Antes (Nao funciona)
  <form class="form-inline">
  <div class="form-group mb-2">
    <input type="text" class="form-control mr-2"
     placeholder="Buscar"
     [(ngModel)]="filtroLista"--- Esse aqui
     >
    <button class="btn btn-outline-success">
      buscar
    </button>
  </div>
</form>
<h3>Filtro:{{ filtroLista }}</h3>

Depois (Agora funciona)

<div class="form-inline">
  <div class="form-group mb-2">
    <input type="text" class="form-control mr-2"
     placeholder="Buscar"
     [(ngModel)]="filtroLista"--- Esse aqui
     >
    <button class="btn btn-outline-success">
      buscar
    </button>
  </div>
</div>
<h3>Filtro:{{ filtroLista }}</h3>
========================================================================
16 - Observable- uma lib para se tipar as DTO´s que trafegam nas interfaces
do angular e as entidades do dominio, basicamente tipar as DTO´s
========================================================================
17 - Trabalhando com extensoes bootstrap

https://valor-software.com/ngx-bootstrap/#/documentation

 npm install ngx-bootstrap --save

 usado para trabalhar com tooltips, janela modal, dropdown e outros componentes
 similares ao jquery
 ========================================================================
 aula 60