// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProAgil.Infra.Context;

namespace ProAgil.Infra.Migrations
{
    [DbContext(typeof(ProAgilContext))]
    partial class ProAgilContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("ProAgil.Domain.ProAgilContext.Entities.Evento", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("lower(hex(randomblob(16)))");

                    b.Property<DateTime>("DataEvento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Local")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("QtdPessoas")
                        .IsUnicode(false);

                    b.Property<string>("Telefone");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("ProAgil.Domain.ProAgilContext.Entities.Lote", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("lower(hex(randomblob(16)))");

                    b.Property<DateTime?>("DataFim");

                    b.Property<DateTime?>("DataInicio");

                    b.Property<string>("EventoId");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal>("Preco")
                        .IsUnicode(false);

                    b.Property<int>("Quantidade")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("Lote");
                });

            modelBuilder.Entity("ProAgil.Domain.ProAgilContext.Entities.Palestrante", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("lower(hex(randomblob(16)))");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EventoId");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("MiniCurriculo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.ToTable("Palestrante");
                });

            modelBuilder.Entity("ProAgil.Domain.ProAgilContext.Entities.PalestranteEvento", b =>
                {
                    b.Property<string>("EventoId");

                    b.Property<string>("PalestranteId");

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("lower(hex(randomblob(16)))");

                    b.HasKey("EventoId", "PalestranteId");

                    b.HasIndex("PalestranteId");

                    b.ToTable("PalestranteEvento");
                });

            modelBuilder.Entity("ProAgil.Domain.ProAgilContext.Entities.RedeSocial", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("lower(hex(randomblob(16)))");

                    b.Property<string>("EventoId");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PalestranteId");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("PalestranteId");

                    b.ToTable("RedeSocial");
                });

            modelBuilder.Entity("ProAgil.Domain.ProAgilContext.Entities.Lote", b =>
                {
                    b.HasOne("ProAgil.Domain.ProAgilContext.Entities.Evento", "Evento")
                        .WithMany("Lotes")
                        .HasForeignKey("EventoId");
                });

            modelBuilder.Entity("ProAgil.Domain.ProAgilContext.Entities.PalestranteEvento", b =>
                {
                    b.HasOne("ProAgil.Domain.ProAgilContext.Entities.Evento", "Evento")
                        .WithMany("PalestranteEventos")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProAgil.Domain.ProAgilContext.Entities.Palestrante", "Palestrante")
                        .WithMany("PalestranteEventos")
                        .HasForeignKey("PalestranteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProAgil.Domain.ProAgilContext.Entities.RedeSocial", b =>
                {
                    b.HasOne("ProAgil.Domain.ProAgilContext.Entities.Evento", "Evento")
                        .WithMany("RedesSociais")
                        .HasForeignKey("EventoId");

                    b.HasOne("ProAgil.Domain.ProAgilContext.Entities.Palestrante", "Palestrante")
                        .WithMany("RedesSociais")
                        .HasForeignKey("PalestranteId");
                });
#pragma warning restore 612, 618
        }
    }
}
